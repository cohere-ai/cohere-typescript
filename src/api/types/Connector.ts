/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as Cohere from "../index";

/**
 * A connector allows you to integrate data sources with the '/chat' endpoint to create grounded generations with citations to the data source.
 * documents to help answer users.
 */
export interface Connector {
    /**
     * The unique identifier of the connector (used in both `/connectors` & `/chat` endpoints).
     * This is automatically created from the name of the connector upon registration.
     */
    id: string;
    /**
     * The organization to which this connector belongs. This is automatically set to
     * the organization of the user who created the connector.
     */
    organizationId?: string;
    /** A human-readable name for the connector. */
    name: string;
    /** A description of the connector. */
    description?: string;
    /** The URL of the connector that will be used to search for documents. */
    url?: string;
    /** The UTC time at which the connector was created. */
    createdAt: Date;
    /** The UTC time at which the connector was last updated. */
    updatedAt: Date;
    /** A list of fields to exclude from the prompt (fields remain in the document). */
    excludes?: string[];
    /** The type of authentication/authorization used by the connector. Possible values: [oauth, service_auth] */
    authType?: string;
    /** The OAuth 2.0 configuration for the connector. */
    oauth?: Cohere.ConnectorOAuth;
    /** The OAuth status for the user making the request. One of ["valid", "expired", ""]. Empty string (field is omitted) means the user has not authorized the connector yet. */
    authStatus?: Cohere.ConnectorAuthStatus;
    /** Whether the connector is active or not. */
    active?: boolean;
    /** Whether a chat request should continue or not if the request to this connector fails. */
    continueOnFailure?: boolean;
}
