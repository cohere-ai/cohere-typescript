/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as Cohere from "../index";

/**
 * Configuration for forcing the model output to adhere to the specified format. Supported on [Command R](https://docs.cohere.com/docs/command-r), [Command R+](https://docs.cohere.com/docs/command-r-plus) and newer models.
 *
 * The model can be forced into outputting JSON objects (with up to 5 levels of nesting) by setting `{ "type": "json_object" }`.
 *
 * A [JSON Schema](https://json-schema.org/) can optionally be provided, to ensure a specific structure.
 *
 * **Note**: When using `{ "type": "json_object" }` your `message` should always explicitly instruct the model to generate a JSON (eg: _"Generate a JSON ..."_) . Otherwise the model may end up getting stuck generating an infinite stream of characters and eventually run out of context length.
 */
export interface ChatRequestResponseFormat {
    /** When set to JSON, the model will return valid JSON. Note that running out of tokens will result in an invalid JSON. */
    type: Cohere.ChatRequestResponseFormatType;
    /**
     * [BETA] A JSON schema object that the output will adhere to. There are some restrictions we have on the schema, refer to [our guide]() for more information.
     * Example (required name and age object):
     *
     * ```json
     * {
     *   "type": "object",
     *   "properties": {
     *     "name": { "type": "string" },
     *     "age": { "type": "integer" }
     *   },
     *   "required": ["name", "age"]
     * }
     * ```
     */
    schema?: Record<string, unknown>;
}
