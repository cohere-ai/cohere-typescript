/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as Cohere from "../index.js";

export interface EmbedJob {
    /** ID of the embed job */
    job_id: string;
    /** The name of the embed job */
    name?: string;
    /** The status of the embed job */
    status: EmbedJob.Status;
    /** The creation date of the embed job */
    created_at: string;
    /** ID of the input dataset */
    input_dataset_id: string;
    /** ID of the resulting output dataset */
    output_dataset_id?: string;
    /** ID of the model used to embed */
    model: string;
    /** The truncation option used */
    truncate: EmbedJob.Truncate;
    meta?: Cohere.ApiMeta;
}

export namespace EmbedJob {
    /**
     * The status of the embed job
     */
    export type Status = "processing" | "complete" | "cancelling" | "cancelled" | "failed";
    export const Status = {
        Processing: "processing",
        Complete: "complete",
        Cancelling: "cancelling",
        Cancelled: "cancelled",
        Failed: "failed",
    } as const;
    /**
     * The truncation option used
     */
    export type Truncate = "START" | "END";
    export const Truncate = {
        Start: "START",
        End: "END",
    } as const;
}
