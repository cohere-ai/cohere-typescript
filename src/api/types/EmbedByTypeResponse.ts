/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as Cohere from "../index.js";

export interface EmbedByTypeResponse {
    id: string;
    /** An object with different embedding types. The length of each embedding type array will be the same as the length of the original `texts` array. */
    embeddings?: EmbedByTypeResponse.Embeddings;
    /** The text entries for which embeddings were returned. */
    texts?: string[];
    /** The image entries for which embeddings were returned. */
    images?: Cohere.Image[];
    meta?: Cohere.ApiMeta;
}

export namespace EmbedByTypeResponse {
    /**
     * An object with different embedding types. The length of each embedding type array will be the same as the length of the original `texts` array.
     */
    export interface Embeddings {
        /** An array of float embeddings. */
        float?: number[][];
        /** An array of signed int8 embeddings. Each value is between -128 and 127. */
        int8?: number[][];
        /** An array of unsigned int8 embeddings. Each value is between 0 and 255. */
        uint8?: number[][];
        /** An array of packed signed binary embeddings. The length of each binary embedding is 1/8 the length of the float embeddings of the provided model. Each value is between -128 and 127. */
        binary?: number[][];
        /** An array of packed unsigned binary embeddings. The length of each binary embedding is 1/8 the length of the float embeddings of the provided model. Each value is between 0 and 255. */
        ubinary?: number[][];
    }
}
