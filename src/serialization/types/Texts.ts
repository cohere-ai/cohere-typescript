/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Cohere from "../../api/index";
import * as core from "../../core";
import { EmbeddingType } from "./EmbeddingType";
import { TextsTruncate } from "./TextsTruncate";

export const Texts: core.serialization.ObjectSchema<serializers.Texts.Raw, Cohere.Texts> = core.serialization.object({
    texts: core.serialization.list(core.serialization.string()),
    model: core.serialization.string(),
    embeddingTypes: core.serialization.property("embedding_types", core.serialization.list(EmbeddingType).optional()),
    truncate: TextsTruncate.optional(),
});

export declare namespace Texts {
    interface Raw {
        texts: string[];
        model: string;
        embedding_types?: EmbeddingType.Raw[] | null;
        truncate?: TextsTruncate.Raw | null;
    }
}
