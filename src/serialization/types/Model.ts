/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "..";
import * as Cohere from "../../api";
import * as core from "../../core";

export const Model: core.serialization.ObjectSchema<serializers.Model.Raw, Cohere.Model> = core.serialization.object({
    name: core.serialization.string().optional(),
    endpoints: core.serialization
        .list(core.serialization.lazy(async () => (await import("..")).CompatibleEndpoint))
        .optional(),
    finetuned: core.serialization.boolean().optional(),
    contextLength: core.serialization.property("context_length", core.serialization.number().optional()),
    tokenizer: core.serialization.string().optional(),
    tokenizerUrl: core.serialization.property("tokenizer_url", core.serialization.string().optional()),
});

export declare namespace Model {
    interface Raw {
        name?: string | null;
        endpoints?: serializers.CompatibleEndpoint.Raw[] | null;
        finetuned?: boolean | null;
        context_length?: number | null;
        tokenizer?: string | null;
        tokenizer_url?: string | null;
    }
}
