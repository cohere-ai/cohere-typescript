/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Cohere from "../../api/index";
import * as core from "../../core";
import { ChatMessage } from "./ChatMessage";
import { ChatToolMessage } from "./ChatToolMessage";

export const Message: core.serialization.Schema<serializers.Message.Raw, Cohere.Message> = core.serialization
    .union("role", {
        CHATBOT: ChatMessage,
        SYSTEM: ChatMessage,
        USER: ChatMessage,
        TOOL: ChatToolMessage,
    })
    .transform<Cohere.Message>({
        transform: (value) => value,
        untransform: (value) => value,
    });

export declare namespace Message {
    export type Raw = Message.Chatbot | Message.System | Message.User | Message.Tool;

    export interface Chatbot extends ChatMessage.Raw {
        role: "CHATBOT";
    }

    export interface System extends ChatMessage.Raw {
        role: "SYSTEM";
    }

    export interface User extends ChatMessage.Raw {
        role: "USER";
    }

    export interface Tool extends ChatToolMessage.Raw {
        role: "TOOL";
    }
}
