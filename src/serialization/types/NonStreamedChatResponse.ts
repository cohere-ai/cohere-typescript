/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "..";
import * as Cohere from "../../api";
import * as core from "../../core";

export const NonStreamedChatResponse: core.serialization.ObjectSchema<
    serializers.NonStreamedChatResponse.Raw,
    Cohere.NonStreamedChatResponse
> = core.serialization.object({
    text: core.serialization.string(),
    generationId: core.serialization.property("generation_id", core.serialization.string().optional()),
    citations: core.serialization
        .list(core.serialization.lazyObject(async () => (await import("..")).ChatCitation))
        .optional(),
    documents: core.serialization
        .list(core.serialization.lazy(async () => (await import("..")).ChatDocument))
        .optional(),
    isSearchRequired: core.serialization.property("is_search_required", core.serialization.boolean().optional()),
    searchQueries: core.serialization.property(
        "search_queries",
        core.serialization
            .list(core.serialization.lazyObject(async () => (await import("..")).ChatSearchQuery))
            .optional()
    ),
    searchResults: core.serialization.property(
        "search_results",
        core.serialization
            .list(core.serialization.lazyObject(async () => (await import("..")).ChatSearchResult))
            .optional()
    ),
    finishReason: core.serialization.property(
        "finish_reason",
        core.serialization.lazy(async () => (await import("..")).FinishReason).optional()
    ),
    toolCalls: core.serialization.property(
        "tool_calls",
        core.serialization.list(core.serialization.lazyObject(async () => (await import("..")).ToolCall)).optional()
    ),
    chatHistory: core.serialization.property(
        "chat_history",
        core.serialization.list(core.serialization.lazyObject(async () => (await import("..")).ChatMessage)).optional()
    ),
});

export declare namespace NonStreamedChatResponse {
    interface Raw {
        text: string;
        generation_id?: string | null;
        citations?: serializers.ChatCitation.Raw[] | null;
        documents?: serializers.ChatDocument.Raw[] | null;
        is_search_required?: boolean | null;
        search_queries?: serializers.ChatSearchQuery.Raw[] | null;
        search_results?: serializers.ChatSearchResult.Raw[] | null;
        finish_reason?: serializers.FinishReason.Raw | null;
        tool_calls?: serializers.ToolCall.Raw[] | null;
        chat_history?: serializers.ChatMessage.Raw[] | null;
    }
}
