/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Cohere from "../../api/index";
import * as core from "../../core";
import { FinishReason } from "./FinishReason";
import { GenerateStreamEndResponse } from "./GenerateStreamEndResponse";
import { GenerateStreamEvent } from "./GenerateStreamEvent";

export const GenerateStreamEnd: core.serialization.ObjectSchema<
    serializers.GenerateStreamEnd.Raw,
    Cohere.GenerateStreamEnd
> = core.serialization
    .object({
        isFinished: core.serialization.property("is_finished", core.serialization.boolean()),
        finishReason: core.serialization.property("finish_reason", FinishReason.optional()),
        response: GenerateStreamEndResponse,
    })
    .extend(GenerateStreamEvent);

export declare namespace GenerateStreamEnd {
    interface Raw extends GenerateStreamEvent.Raw {
        is_finished: boolean;
        finish_reason?: FinishReason.Raw | null;
        response: GenerateStreamEndResponse.Raw;
    }
}
