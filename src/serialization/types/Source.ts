/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Cohere from "../../api/index";
import * as core from "../../core";
import { ChatToolSource } from "./ChatToolSource";
import { ChatDocumentSource } from "./ChatDocumentSource";

export const Source: core.serialization.Schema<serializers.Source.Raw, Cohere.Source> = core.serialization
    .union("type", {
        tool: ChatToolSource,
        document: ChatDocumentSource,
    })
    .transform<Cohere.Source>({
        transform: (value) => value,
        untransform: (value) => value,
    });

export declare namespace Source {
    export type Raw = Source.Tool | Source.Document;

    export interface Tool extends ChatToolSource.Raw {
        type: "tool";
    }

    export interface Document extends ChatDocumentSource.Raw {
        type: "document";
    }
}
