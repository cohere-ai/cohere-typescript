/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Cohere from "../../api/index";
import * as core from "../../core";

export const EmbedByTypeResponseEmbeddings: core.serialization.ObjectSchema<
    serializers.EmbedByTypeResponseEmbeddings.Raw,
    Cohere.EmbedByTypeResponseEmbeddings
> = core.serialization.object({
    float: core.serialization.list(core.serialization.list(core.serialization.number())).optional(),
    int8: core.serialization.list(core.serialization.list(core.serialization.number())).optional(),
    uint8: core.serialization.list(core.serialization.list(core.serialization.number())).optional(),
    binary: core.serialization.list(core.serialization.list(core.serialization.number())).optional(),
    ubinary: core.serialization.list(core.serialization.list(core.serialization.number())).optional(),
});

export declare namespace EmbedByTypeResponseEmbeddings {
    interface Raw {
        float?: number[][] | null;
        int8?: number[][] | null;
        uint8?: number[][] | null;
        binary?: number[][] | null;
        ubinary?: number[][] | null;
    }
}
