/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Cohere from "../../api/index";
import * as core from "../../core";
import { ConnectorOAuth } from "./ConnectorOAuth";
import { ConnectorAuthStatus } from "./ConnectorAuthStatus";

export const Connector: core.serialization.ObjectSchema<serializers.Connector.Raw, Cohere.Connector> =
    core.serialization.object({
        id: core.serialization.string(),
        organizationId: core.serialization.property("organization_id", core.serialization.string().optional()),
        name: core.serialization.string(),
        description: core.serialization.string().optional(),
        url: core.serialization.string().optional(),
        createdAt: core.serialization.property("created_at", core.serialization.date()),
        updatedAt: core.serialization.property("updated_at", core.serialization.date()),
        excludes: core.serialization.list(core.serialization.string()).optional(),
        authType: core.serialization.property("auth_type", core.serialization.string().optional()),
        oauth: ConnectorOAuth.optional(),
        authStatus: core.serialization.property("auth_status", ConnectorAuthStatus.optional()),
        active: core.serialization.boolean().optional(),
        continueOnFailure: core.serialization.property("continue_on_failure", core.serialization.boolean().optional()),
    });

export declare namespace Connector {
    interface Raw {
        id: string;
        organization_id?: string | null;
        name: string;
        description?: string | null;
        url?: string | null;
        created_at: string;
        updated_at: string;
        excludes?: string[] | null;
        auth_type?: string | null;
        oauth?: ConnectorOAuth.Raw | null;
        auth_status?: ConnectorAuthStatus.Raw | null;
        active?: boolean | null;
        continue_on_failure?: boolean | null;
    }
}
