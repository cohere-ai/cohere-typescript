/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Cohere from "../../api/index";
import * as core from "../../core";
import { EmbedImage } from "./EmbedImage";
import { EmbedText } from "./EmbedText";

export const EmbedContent: core.serialization.Schema<serializers.EmbedContent.Raw, Cohere.EmbedContent> =
    core.serialization
        .union("type", {
            image_url: EmbedImage,
            text: EmbedText,
        })
        .transform<Cohere.EmbedContent>({
            transform: (value) => value,
            untransform: (value) => value,
        });

export declare namespace EmbedContent {
    type Raw = EmbedContent.ImageUrl | EmbedContent.Text;

    interface ImageUrl extends EmbedImage.Raw {
        type: "image_url";
    }

    interface Text extends EmbedText.Raw {
        type: "text";
    }
}
