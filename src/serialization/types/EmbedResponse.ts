/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "..";
import * as Cohere from "../../api";
import * as core from "../../core";
import { EmbedFloatsResponse } from "./EmbedFloatsResponse";
import { EmbedByTypeResponse } from "./EmbedByTypeResponse";

export const EmbedResponse: core.serialization.Schema<serializers.EmbedResponse.Raw, Cohere.EmbedResponse> =
    core.serialization
        .union(core.serialization.discriminant("responseType", "response_type"), {
            embeddings_floats: EmbedFloatsResponse,
            embeddings_by_type: EmbedByTypeResponse,
        })
        .transform<Cohere.EmbedResponse>({
            transform: (value) => value,
            untransform: (value) => value,
        });

export declare namespace EmbedResponse {
    type Raw = EmbedResponse.EmbeddingsFloats | EmbedResponse.EmbeddingsByType;

    interface EmbeddingsFloats extends EmbedFloatsResponse.Raw {
        response_type: "embeddings_floats";
    }

    interface EmbeddingsByType extends EmbedByTypeResponse.Raw {
        response_type: "embeddings_by_type";
    }
}
