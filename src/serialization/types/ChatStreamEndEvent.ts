/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "..";
import * as Cohere from "../../api";
import * as core from "../../core";

export const ChatStreamEndEvent: core.serialization.ObjectSchema<
    serializers.ChatStreamEndEvent.Raw,
    Cohere.ChatStreamEndEvent
> = core.serialization
    .object({
        finishReason: core.serialization.property(
            "finish_reason",
            core.serialization.lazy(async () => (await import("..")).ChatStreamEndEventFinishReason)
        ),
        response: core.serialization.lazyObject(async () => (await import("..")).NonStreamedChatResponse),
    })
    .extend(core.serialization.lazyObject(async () => (await import("..")).ChatStreamEvent));

export declare namespace ChatStreamEndEvent {
    interface Raw extends serializers.ChatStreamEvent.Raw {
        finish_reason: serializers.ChatStreamEndEventFinishReason.Raw;
        response: serializers.NonStreamedChatResponse.Raw;
    }
}
