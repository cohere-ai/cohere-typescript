/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Cohere from "../../api/index";
import * as core from "../../core";
import { ChatTextContent } from "./ChatTextContent";

export const AssistantMessageResponseContentItem: core.serialization.Schema<
    serializers.AssistantMessageResponseContentItem.Raw,
    Cohere.AssistantMessageResponseContentItem
> = core.serialization
    .union("type", {
        text: ChatTextContent,
        thinking: core.serialization.object({
            value: core.serialization.unknown(),
        }),
    })
    .transform<Cohere.AssistantMessageResponseContentItem>({
        transform: (value) => value,
        untransform: (value) => value,
    });

export declare namespace AssistantMessageResponseContentItem {
    export type Raw = AssistantMessageResponseContentItem.Text | AssistantMessageResponseContentItem.Thinking;

    export interface Text extends ChatTextContent.Raw {
        type: "text";
    }

    export interface Thinking {
        type: "thinking";
        value?: unknown;
    }
}
