/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "..";
import * as Cohere from "../../api";
import * as core from "../../core";

export const ApiMeta: core.serialization.ObjectSchema<serializers.ApiMeta.Raw, Cohere.ApiMeta> =
    core.serialization.object({
        apiVersion: core.serialization.property(
            "api_version",
            core.serialization.lazyObject(async () => (await import("..")).ApiMetaApiVersion).optional()
        ),
        billedUnits: core.serialization.property(
            "billed_units",
            core.serialization.lazyObject(async () => (await import("..")).ApiMetaBilledUnits).optional()
        ),
        tokens: core.serialization.lazyObject(async () => (await import("..")).ApiMetaTokens).optional(),
        warnings: core.serialization.list(core.serialization.string()).optional(),
    });

export declare namespace ApiMeta {
    interface Raw {
        api_version?: serializers.ApiMetaApiVersion.Raw | null;
        billed_units?: serializers.ApiMetaBilledUnits.Raw | null;
        tokens?: serializers.ApiMetaTokens.Raw | null;
        warnings?: string[] | null;
    }
}
