/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../..";
import * as Cohere from "../../../api";
import * as core from "../../../core";

export const EmbedRequest: core.serialization.Schema<serializers.EmbedRequest.Raw, Cohere.EmbedRequest> =
    core.serialization.object({
        texts: core.serialization.list(core.serialization.string()),
        model: core.serialization.string().optional(),
        inputType: core.serialization.property("input_type", core.serialization.string().optional()),
        truncate: core.serialization.lazy(async () => (await import("../..")).EmbedRequestTruncate).optional(),
    });

export declare namespace EmbedRequest {
    interface Raw {
        texts: string[];
        model?: string | null;
        input_type?: string | null;
        truncate?: serializers.EmbedRequestTruncate.Raw | null;
    }
}
