/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../..";
import * as Cohere from "../../../api";
import * as core from "../../../core";
import { ClassifyExample } from "../../types/ClassifyExample";
import { ClassifyRequestTruncate } from "../../types/ClassifyRequestTruncate";

export const ClassifyRequest: core.serialization.Schema<serializers.ClassifyRequest.Raw, Cohere.ClassifyRequest> =
    core.serialization.object({
        inputs: core.serialization.list(core.serialization.string()),
        examples: core.serialization.list(ClassifyExample),
        model: core.serialization.string().optional(),
        preset: core.serialization.string().optional(),
        truncate: ClassifyRequestTruncate.optional(),
    });

export declare namespace ClassifyRequest {
    interface Raw {
        inputs: string[];
        examples: ClassifyExample.Raw[];
        model?: string | null;
        preset?: string | null;
        truncate?: ClassifyRequestTruncate.Raw | null;
    }
}
