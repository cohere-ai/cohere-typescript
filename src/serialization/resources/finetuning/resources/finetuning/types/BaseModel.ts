/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../..";
import * as Cohere from "../../../../../../api";
import * as core from "../../../../../../core";

export const BaseModel: core.serialization.ObjectSchema<
    serializers.finetuning.BaseModel.Raw,
    Cohere.finetuning.BaseModel
> = core.serialization.object({
    name: core.serialization.string().optional(),
    version: core.serialization.string().optional(),
    baseType: core.serialization.property(
        "base_type",
        core.serialization.lazy(async () => (await import("../../../../..")).finetuning.BaseType)
    ),
    strategy: core.serialization.lazy(async () => (await import("../../../../..")).finetuning.Strategy).optional(),
});

export declare namespace BaseModel {
    interface Raw {
        name?: string | null;
        version?: string | null;
        base_type: serializers.finetuning.BaseType.Raw;
        strategy?: serializers.finetuning.Strategy.Raw | null;
    }
}
