/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../..";
import * as Cohere from "../../../../../../api";
import * as core from "../../../../../../core";

export const Settings: core.serialization.ObjectSchema<
    serializers.finetuning.Settings.Raw,
    Cohere.finetuning.Settings
> = core.serialization.object({
    baseModel: core.serialization.property(
        "base_model",
        core.serialization.lazyObject(async () => (await import("../../../../..")).finetuning.BaseModel)
    ),
    datasetId: core.serialization.property("dataset_id", core.serialization.string()),
    hyperparameters: core.serialization
        .lazyObject(async () => (await import("../../../../..")).finetuning.Hyperparameters)
        .optional(),
    multiLabel: core.serialization.property("multi_label", core.serialization.boolean().optional()),
});

export declare namespace Settings {
    interface Raw {
        base_model: serializers.finetuning.BaseModel.Raw;
        dataset_id: string;
        hyperparameters?: serializers.finetuning.Hyperparameters.Raw | null;
        multi_label?: boolean | null;
    }
}
