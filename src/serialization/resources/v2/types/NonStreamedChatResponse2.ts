/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as Cohere from "../../../../api/index";
import * as core from "../../../../core";
import { ChatFinishReason } from "./ChatFinishReason";
import { AssistantMessage } from "./AssistantMessage";
import { Usage } from "./Usage";

export const NonStreamedChatResponse2: core.serialization.ObjectSchema<
    serializers.NonStreamedChatResponse2.Raw,
    Cohere.NonStreamedChatResponse2
> = core.serialization.object({
    id: core.serialization.string(),
    finishReason: core.serialization.property("finish_reason", ChatFinishReason),
    prompt: core.serialization.string().optional(),
    message: AssistantMessage.optional(),
    usage: Usage.optional(),
});

export declare namespace NonStreamedChatResponse2 {
    interface Raw {
        id: string;
        finish_reason: ChatFinishReason.Raw;
        prompt?: string | null;
        message?: AssistantMessage.Raw | null;
        usage?: Usage.Raw | null;
    }
}
