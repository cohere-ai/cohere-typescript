/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as Cohere from "../../../../api/index";
import * as core from "../../../../core";
import { ToolContent } from "./ToolContent";

export const ToolMessage2ToolContentItem: core.serialization.Schema<
    serializers.ToolMessage2ToolContentItem.Raw,
    Cohere.ToolMessage2ToolContentItem
> = core.serialization
    .union("type", {
        tool_result_object: ToolContent,
    })
    .transform<Cohere.ToolMessage2ToolContentItem>({
        transform: (value) => value,
        untransform: (value) => value,
    });

export declare namespace ToolMessage2ToolContentItem {
    type Raw = ToolMessage2ToolContentItem.ToolResultObject;

    interface ToolResultObject extends ToolContent.Raw {
        type: "tool_result_object";
    }
}
