/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as Cohere from "../../../../api/index";
import * as core from "../../../../core";
import { ChatFinishReason } from "../../../types/ChatFinishReason";
import { AssistantMessageResponse } from "../../../types/AssistantMessageResponse";
import { Usage } from "../../../types/Usage";
import { LogprobItem } from "../../../types/LogprobItem";

export const V2ChatResponse: core.serialization.ObjectSchema<serializers.V2ChatResponse.Raw, Cohere.V2ChatResponse> =
    core.serialization.object({
        id: core.serialization.string(),
        finishReason: core.serialization.property("finish_reason", ChatFinishReason),
        message: AssistantMessageResponse,
        usage: Usage.optional(),
        logprobs: core.serialization.list(LogprobItem).optional(),
    });

export declare namespace V2ChatResponse {
    export interface Raw {
        id: string;
        finish_reason: ChatFinishReason.Raw;
        message: AssistantMessageResponse.Raw;
        usage?: Usage.Raw | null;
        logprobs?: LogprobItem.Raw[] | null;
    }
}
