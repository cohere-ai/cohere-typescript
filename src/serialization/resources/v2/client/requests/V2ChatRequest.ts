/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../index";
import * as Cohere from "../../../../../api/index";
import * as core from "../../../../../core";
import { ChatMessages } from "../../../../types/ChatMessages";
import { ToolV2 } from "../../../../types/ToolV2";
import { V2ChatRequestDocumentsItem } from "../../types/V2ChatRequestDocumentsItem";
import { CitationOptions } from "../../../../types/CitationOptions";
import { ResponseFormatV2 } from "../../../../types/ResponseFormatV2";
import { V2ChatRequestSafetyMode } from "../../types/V2ChatRequestSafetyMode";
import { ChatMessageV2 } from "../../../../types/ChatMessageV2";

export const V2ChatRequest: core.serialization.Schema<serializers.V2ChatRequest.Raw, Cohere.V2ChatRequest> =
    core.serialization.object({
        model: core.serialization.string(),
        messages: ChatMessages,
        tools: core.serialization.list(ToolV2).optional(),
        strictTools: core.serialization.property("strict_tools", core.serialization.boolean().optional()),
        documents: core.serialization.list(V2ChatRequestDocumentsItem).optional(),
        citationOptions: core.serialization.property("citation_options", CitationOptions.optional()),
        responseFormat: core.serialization.property("response_format", ResponseFormatV2.optional()),
        safetyMode: core.serialization.property("safety_mode", V2ChatRequestSafetyMode.optional()),
        maxTokens: core.serialization.property("max_tokens", core.serialization.number().optional()),
        stopSequences: core.serialization.property(
            "stop_sequences",
            core.serialization.list(core.serialization.string()).optional()
        ),
        temperature: core.serialization.number().optional(),
        seed: core.serialization.number().optional(),
        frequencyPenalty: core.serialization.property("frequency_penalty", core.serialization.number().optional()),
        presencePenalty: core.serialization.property("presence_penalty", core.serialization.number().optional()),
        k: core.serialization.number().optional(),
        p: core.serialization.number().optional(),
        returnPrompt: core.serialization.property("return_prompt", core.serialization.boolean().optional()),
        logprobs: core.serialization.boolean().optional(),
    });

export declare namespace V2ChatRequest {
    interface Raw {
        model: string;
        messages: ChatMessages.Raw;
        tools?: ToolV2.Raw[] | null;
        strict_tools?: boolean | null;
        documents?: V2ChatRequestDocumentsItem.Raw[] | null;
        citation_options?: CitationOptions.Raw | null;
        response_format?: ResponseFormatV2.Raw | null;
        safety_mode?: V2ChatRequestSafetyMode.Raw | null;
        max_tokens?: number | null;
        stop_sequences?: string[] | null;
        temperature?: number | null;
        seed?: number | null;
        frequency_penalty?: number | null;
        presence_penalty?: number | null;
        k?: number | null;
        p?: number | null;
        return_prompt?: boolean | null;
        logprobs?: boolean | null;
    }
}
